/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 FaceCube.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { Group } from 'three';

interface Props{
  position: number[];
}

export const Model:React.FC<Props> = (props) => {
  const group = useRef<Group>();
  // @ts-expect-error
  const { nodes, materials } = useGLTF('/FaceCube.glb');

  useFrame(state => {
    const t = state.clock.getElapsedTime();
    if (group.current) {
      group.current.rotation.y = t / 4;
      group.current.rotation.z = 1 + (5 * Math.cos(t / 5));
    }
  })  

  return (
    // @ts-expect-error
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Cube" geometry={nodes.Cube.geometry} material={materials.Cube} />
      </group>
    </group>
  )
}

useGLTF.preload('/FaceCube.glb')
